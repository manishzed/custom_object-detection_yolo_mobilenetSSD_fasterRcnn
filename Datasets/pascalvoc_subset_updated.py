# -*- coding: utf-8 -*-
"""custom_ssd_annotted_PascalVoc_Subset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TU-5jxND2O9-L_BQ33dnbwjGyBT3iWQm

Creation of a subset of Pascal VOC dataset
"""

# get the pascal voc dataset#
#!wget 'http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar'
!wget https://data.deepai.org/PascalVOC2012.zip
#!tar -xvf /content/VOCtrainval_11-May-2012.tar
!unzip PascalVOC2012.zip
!rm -rf PascalVOC2012.zip

# Commented out IPython magic to ensure Python compatibility.
# prepare subset's dir
!mkdir images_set3
# %cd images_set3
!mkdir test
!mkdir train

# Commented out IPython magic to ensure Python compatibility.
# take specific number of specific classes from Pascal VOC dataset
# %cd ..

import os
import xml.etree.ElementTree as ET
from shutil import copyfile
from os.path import isfile, join

# use 4 classes: horse, cow, sheep and person
classesINeed = ['horse', 'cow', 'sheep', 'person']

fileDict_train = {}
fileDict_test = {}

# one dictionary for each class
for cl in classesINeed:
    fileDict_train[cl] = [] 
    
for cl2 in classesINeed:
    fileDict_test[cl2] = [] 
    
# define the relevant directories 
xmlDirectory = '/content/VOC2012/Annotations/'
modifiedXmlDir_train = '/content/images_set3/train/'
modifiedXmlDir_test = '/content/images_set3/test/'
JPEGdirectory = '/content/VOC2012/JPEGImages/'
modifiedJPEGdir_train = '/content/images_set3/train/'
modifiedJPEGdir_test = '/content/images_set3/test/'

# the number of images per class for train and test sets 
imgnum_train = 45
imgnum_test = 10

# check how many images and annotations exist in total in downloaded Pascal VOC
print('Total number of Pascal VOC images:', len(os.listdir(JPEGdirectory)))
print('Total number of Pascal VOC annotations:', len(os.listdir(xmlDirectory)))

# all xml files into a list
onlyfiles = [f for f in os.listdir(xmlDirectory) if isfile(join(xmlDirectory,f))]
      
# for all xml files
for filename in onlyfiles:
  filelink = join(xmlDirectory,filename)
  tree = ET.parse(filelink)
  root = tree.getroot()
  objs = root.findall('object')

  for obj in objs:
    currentObj = obj.find('name').text

    if currentObj in classesINeed:
        # train set         
        # for images with many objects, keep their filename just one time
        if filename not in fileDict_train[currentObj] and len(fileDict_train[currentObj]) <= (imgnum_train - 1) :   # because pointer of dictionary starts from 0
            # take different images between train and test sets
            if filename not in fileDict_test[currentObj]:
              # write the xml file to modifiedXmlDir
              fileDict_train[currentObj].append(filename)
              fwrite = open(modifiedXmlDir_train + filename , 'wb')
              tree.write(fwrite)
              fwrite.close()
              # copy the corresponding JPEG to modifiedJPEGDir
              copyfile(JPEGdirectory + filename[:-3] + 'jpg', modifiedJPEGdir_train + filename[:-3] + 'jpg')
        # test set
        elif filename not in fileDict_test[currentObj] and len(fileDict_test[currentObj]) <= (imgnum_test - 1) :    # because pointer of dictionary starts from 0
            # take different images between train and test sets
            if filename not in fileDict_train[currentObj]:
                # write the xml file to modifiedXmlDir
                fileDict_test[currentObj].append(filename)
                fwrite = open(modifiedXmlDir_test + filename , 'wb')
                tree.write(fwrite)
                fwrite.close()
                # copy the corresponding JPEG to modifiedJPEGDir
                copyfile(JPEGdirectory + filename[:-3] + 'jpg', modifiedJPEGdir_test + filename[:-3] + 'jpg')

# check if the numbers are what we expect         

print('Total number of images for training:', len(os.listdir(modifiedJPEGdir_train)))
print('Total number of annotations of images for training:', len(os.listdir(modifiedXmlDir_train)))

print('Total number of images for testing:', len(os.listdir(modifiedJPEGdir_test)))
print('Total number of annotations of images for testing:', len(os.listdir(modifiedXmlDir_test)))

# save subset to drive
from google.colab import drive
drive.mount('/content/drive')

!cp -r images_set3 /content/drive/MyDrive/softweb/custom_mobilenetSSD

"""
images_set3 is now a subset of Pascal VOC dataset, combrised of 4 classes with 45 images each for training and 10 for testing, respectively."""